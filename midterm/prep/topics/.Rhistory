# Create two-digit IDs
some_ids = expand.grid(i = letters, d = letters) %>%
transmute(id = paste0(i, d)) %>%
unlist()
# Number of tables
n_tables = 5
# Number of observations per table
n_obs = 1e7
# Generate data and create a database ----------------------------------------------------
# Create DuckDB database and connect
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
# Set seed
set.seed(12345)
# Iteratively: Generate 'n_tables' datasets and append to 'test-db'
for (i in 1:n_tables) {
# Genreate a table
tmp_dt = data.table(
id = sample(x = some_ids, size = n_obs, replace = T),
x1 = rnorm(n_obs),
x2 = sample.int(n = 1e6, size = n_obs, replace = T),
x3 = sample(x = some_days, size = n_obs, replace = T)
)
# Write to 'tmp_dt' to a table in our database 'test-db'
dbWriteTable(
conn = duck_con,
name = "test-table",
value = tmp_dt,
append = T
)
# Get rid of 'tmp_dt'
rm(tmp_dt); invisible(gc())
}
# Disconnect from the database
dbDisconnect(duck_con, shutdown = T)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
# Number of unique IDs
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
# Count instances where 'id' == 'aa'
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
# Minimum date for each 'id'
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
# Make data for simulation ---------------------------------------------------------------
# Create date sequence from which we can sample
some_days = seq.Date(
from = ymd(19500101),
to = ymd(20201231),
by = "1 day"
)
# Create two-digit IDs
some_ids = expand.grid(i = letters, d = letters) %>%
transmute(id = paste0(i, d)) %>%
unlist()
# Number of tables
n_tables = 10
# Number of observations per table
n_obs = 1e7
# Generate data and create a database ----------------------------------------------------
# Create DuckDB database and connect
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
# Set seed
set.seed(12345)
# Iteratively: Generate 'n_tables' datasets and append to 'test-db'
for (i in 1:n_tables) {
# Genreate a table
tmp_dt = data.table(
id = sample(x = some_ids, size = n_obs, replace = T),
x1 = rnorm(n_obs),
x2 = sample.int(n = 1e6, size = n_obs, replace = T),
x3 = sample(x = some_days, size = n_obs, replace = T)
)
# Write to 'tmp_dt' to a table in our database 'test-db'
dbWriteTable(
conn = duck_con,
name = "test-table",
value = tmp_dt,
append = T
)
# Get rid of 'tmp_dt'
rm(tmp_dt); invisible(gc())
}
# Disconnect from the database
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
tbl(duck_con, "test-table")
tic()
tbl(duck_con, "test-table") %>%
filter(between(x3, ymd(19500101), ymd(19501231))) %>%
count()
toc()
tbl(duck_con, "test-table") %>%
filter(between(x3, ymd(19500101), ymd(19501231)))
tic()
tbl(duck_con, "test-table") %>%
filter(x3 >= ymd(19500101) & x3 <= ymd(19501231)) %>%
count()
toc()
tbl_con(duck_con, "test-table")
tbl(duck_con, "test-table")
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
# Number of unique IDs
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
# Count instances where 'id' == 'aa'
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
# Minimum date for each 'id'
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
# Find number of observations in 1950
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
gc()
db_drop_table(duck_con, "test-table")
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
dbDisconnect(duck_con)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
# Number of unique IDs
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
# Count instances where 'id' == 'aa'
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
# Minimum date for each 'id'
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
# Find number of observations in 1950
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
# Number of unique IDs
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
# Count instances where 'id' == 'aa'
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
# Minimum date for each 'id'
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
# Find number of observations in 1950
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
dbListConnections()
dbListConnections(duck_con)
dbListConnections(duckdb::duckdb())
tbl(duck_con, "test-table") %>% count()
dbListTables(duck_con)
dbDisconnect(con, shutdown=TRUE)
dbDisconnect(duck_con, shutdown=TRUE)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
dbListTables(duck_con)
db_list_tables(duck_con)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
# Make data for simulation ---------------------------------------------------------------
# Create date sequence from which we can sample
some_days = seq.Date(
from = ymd(19500101),
to = ymd(20201231),
by = "1 day"
)
# Create two-digit IDs
some_ids = expand.grid(i = letters, d = letters) %>%
transmute(id = paste0(i, d)) %>%
unlist()
# Number of tables
n_tables = 20
# Number of observations per table
n_obs = 1e7
# Generate data and create a database ----------------------------------------------------
# Create DuckDB database and connect
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
# Set seed
set.seed(12345)
# Iteratively: Generate 'n_tables' datasets and append to 'test-db'
for (i in 1:n_tables) {
# Genreate a table
tmp_dt = data.table(
id = sample(x = some_ids, size = n_obs, replace = T),
x1 = rnorm(n_obs),
x2 = sample.int(n = 1e6, size = n_obs, replace = T),
x3 = sample(x = some_days, size = n_obs, replace = T)
)
# Write to 'tmp_dt' to a table in our database 'test-db'
dbWriteTable(
conn = duck_con,
name = "test-table",
value = tmp_dt,
append = T
)
# Get rid of 'tmp_dt'
rm(tmp_dt); invisible(gc())
}
# Disconnect from the database
dbDisconnect(duck_con, shutdown = T)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
dbDisconnect(duck_con, shutdown = T)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
# Find number of observations in 1950
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
p_load(startup)
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
startup, tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
restart()
rstudioapi::restartSession()
# Setup ----------------------------------------------------------------------------------
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
rstudioapi::restartSession()
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
tbl(duck_con, "test-table") %>% count()
tbl(duck_con, "test-table") %>% summarize(n_distinct(id))
tbl(duck_con, "test-table") %>% filter(id == "aa") %>% count()
tic()
tbl(duck_con, "test-table") %>%
group_by(id) %>%
summarize(min_date = min(x3, na.rm = T))
toc()
# Find number of observations in 1950
tic()
d1 = ymd(19500101)
d2 = ymd(19501231)
tbl(duck_con, "test-table") %>%
filter(between(x3, d1, d2)) %>%
count()
toc()
# Disconnect
dbDisconnect(duck_con, shutdown = T)
# Connect to database and calculate ------------------------------------------------------
# Restart R
rstudioapi::restartSession()
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
# Load packages
library(pacman)
p_load(
tictoc, fst, duckdb,
dplyr, data.table, lubridate,
magrittr, here
)
# Connect to established database
duck_con = dbConnect(duckdb::duckdb(), here("test-db"))
dbDisconnect(duck_con, shutdown = T)
remotes::install_github('rstudio/pagedown')
devtools::load_all()
devtools::load_all()
install.packages('devtools')
install.packages("devtools")
devtools::install_github("hannesmuehleisen/MonetDBLite-R")
devtools::install_github("hannesmuehleisen/MonetDBLite-R")
options(buildtools.check = function(action) TRUE )
devtools::install_github("hannesmuehleisen/MonetDBLite-R")
getOption("buildtools.check", NULL)
getOption("buildtools.check", NULL)("Building R package from source")
install.packages("remotes")
remotes::install_github("hannesmuehleisen/MonetDBLite-R")
ls()
library(tidyverse)
test = data.frame(x = 1:10, y = 1:10)
tmpo
tmp
test
test %>% filter(x > 3, y < 9)
test %>% filter(x > 3 & y < 9)
my_sum = function(v1, v2, v3) v1 + v2 + v3
my_sum(1, 2, 3)
my_sum(v1 = 1, v2 = 2, v3 = 3)
my_sum = function(v1, v2, v3) {
# Fancy function stuff here
v1 + v2 + v3
}
my_sum(1, 2, 3)
my_sum = function(v1, v2, v3) {
# Fancy function stuff here
step1 = v1 + v2 + v3
# Return the sum
return(step1)
}
my_sum(1, 2, 3)
my_sum = function(v1, v2, v3) {
# Fancy function stuff here
step1 = v1 + v2 + v3
# Check if the sum is positive or negative
ifelse(test = step1 >= 0, yes = "positive", no = "negative")
}
my_sum(1, 2, 3)
my_sum(1, 2, -5)
setwd("Dropbox/UO/Teaching/EC421S20/midterm/topics/")
xaringan::inf_mr("midterm-topics.Rmd")
pagedown::chrome_print("midterm-topics.html")
pagedown::book_crc("midterm-topics.html")
