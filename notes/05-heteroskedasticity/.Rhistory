xaringan:::inf_mr()
xaringan:::inf_mr()
?t.test
v1 <- rnorm(100)
v2 <- rnorm(100)
t.test(x = v1, y = v2)
library(estimatr)
?lm_robust
library(dplyr)
1:10
1:3 %>% paste()
1:3 %>% paste0()
xaringan:::inf_mr()
xaringan:::inf_mr()
?caret::train
library(pacman)
p_load(tidyverse, caret, magrittr)
sample(1:10, 11, T)
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10, rep(NA, 4)), size = N, replace = T)
)
ex_df
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10, rep(NA, 4)), size = N, replace = T)
)
preProcess(ex_df, method = "knnImpute") %>% predict(newdata = ex_df)
install.packages("RANN")
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10, rep(NA, 4)), size = N, replace = T)
)
preProcess(ex_df, method = "knnImpute") %>% predict(newdata = ex_df)
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10, rep(NA, 4)), size = N, replace = T)
)
ex_df
preProcess(ex_df[,1:2], method = "knnImpute") %>% predict(newdata = ex_df)
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10), size = N, replace = T),
x6 = sample(c(1:10), size = N, replace = T)
)
preProcess(ex_df[,1:2], method = "knnImpute") %>% predict(newdata = ex_df)
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10), size = N, replace = T),
x6 = sample(c(1:10), size = N, replace = T)
)
preProcess(ex_df[,1:2], method = "knnImpute") %>% predict(newdata = ex_df)
ex_df
preProcess(ex_df[,1:2], method = "knnImpute") %>% predict(newdata = ex_df)
ex_df %>% summary
preProcess(ex_df[,1:2], method = "knnImpute") %>% predict(newdata = ex_df) %>% summary()
preProcess(ex_df, method = "knnImpute") %>% predict(newdata = ex_df) %>% summary()
preProcess(ex_df, method = "knnImpute") %>% predict(newdata = ex_df) %>% summary()
?preProcess
preProcess(ex_df, method = "medianImpute") %>% predict(newdata = ex_df) %>% summary()
preProcess(ex_df, method = "medianImpute") %>% predict(newdata = ex_df)
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10), size = N, replace = T)
)
preProcess(ex_df, method = "medianImpute") %>% predict(newdata = ex_df) %>% summary()
p_load(tidyverse, caret, magrittr)
set.seed(123)
N = 10
ex_df = tibble(
x1 = sample(1:10, size = N, replace = T),
x2 = sample(c(1:10, NA), size = N, replace = T),
x3 = sample(c(1:10, rep(NA, 4)), size = N, replace = T),
x4 = sample(1:10, size = N, replace = T),
x5 = sample(c(1:10, NA), size = N, replace = T),
x6 = sample(c(1:10), size = N, replace = T)
)
preProcess(ex_df, method = "knnImpute") %>% predict(newdata = ex_df) %>% summary()
preProcess(ex_df, method = "medianImpute") %>% predict(newdata = ex_df) %>% summary()
seq(25, 100, by = 25)
seq(25, 100, by = 1)
library(pacman)
p_load(tidyverse, Ecdat)
# Select and rename desired variables; assign to new dataset
test_df <- select(Caschool, test_score = testscr, ratio = str, income = avginc)
# Format as tibble
test_df <- as_tibble(test_df)
# View first 2 rows of the dataset
head(test_df, 2)
test_df %>% dim
158 * 2
# Estimate the model
est_model <- lm(test_score ~ ratio + income, data = test_df)
# Summary of the estimate
tidy(est_model)
library(tidyverse)
# Estimate the model
est_model <- lm(test_score ~ ratio + income, data = test_df)
# Summary of the estimate
tidy(est_model)
library(broom)
# Estimate the model
est_model <- lm(test_score ~ ratio + income, data = test_df)
# Summary of the estimate
tidy(est_model)
# Estimate the model
est_model <- lm(test_score ~ ratio + income, data = test_df)
# Summary of the estimate
tidy(est_model)
test_df$e <- residuals(est_model)
test_df
xaringan::inf_mr("05-heteroskedasticity.Rmd")
library(rvest)
tmp = read_html("https://obipublic.epa.gov/analytics/saw.dll?PortalPages&Action=Navigate&PortalPath=/shared/CIMC/_portal/CIMC&Page=Profile+Page&col1=ACRES_GRANT_EXPORT.PROPERTY_ID&val1=%2298803%22")
tmp
tmp %>% html_text()
xaringan::inf_mr("05-heteroskedasticity.Rmd")
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
xaringan::inf_mr('05-heteroskedasticity.Rmd')
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
warnings()
xaringan::inf_mr('05-heteroskedasticity.Rmd')
?felm
felm(test_score ~ ratio + income, data = test_df)
felm(test_score ~ ratio + income, data = test_df) %>% summary()
felm(test_score ~ ratio + income, data = test_df) %>% summary(robust = T)
fixest::feols(test_score ~ ratio + income, data = test_df) %>% summary(robust = T)
?summary.fixest
fixest::feols(test_score ~ ratio + income, data = test_df) %>% summary(vcov = 'hetero')
test_df
?fixest::feols
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
test_df
lm(test_score ~ income, data = test_df)
tmp = lm(test_score ~ income, data = test_df)
tmp$residuals
tmp = lm(test_score ~ income, data = test_df)
tmp$residuals
tmp = lm(test_score ~ income, data = test_df)
sse = sum(tmp$residuals^2)
sse
tmp
summary(tmp)$r.squared
names(tmp)
names(summary(tmp))
tmp
summary(tmp)
summary(tmp)$r.squared
?summary.fixest
sample_df <- tibble(
x = runif(size, 0.5, 1.5),
y = b0 + b1 * x + rnorm(size, 0, sd = s2 * x^2)
)
n = 30
b0 <- 1
b1 <- 10
s2 <- 1
# Sample size
n <- 30
# Number of iterations
n_iter <- 1e4
# Set seed
set.seed(1234)
size = n
sample_df <- tibble(
x = runif(size, 0.5, 1.5),
y = b0 + b1 * x + rnorm(size, 0, sd = s2 * x^2)
)
ols <- feols(y ~ x, data = sample_df)
# WLS: Correct weights
wls_t <- lm(y ~ x, data = sample_df, weights = 1/x^2)
# WLS: Correct weights
wls_f <- lm(y ~ x, data = sample_df, weights = 1/x)
# Save results
summary(ols, vcov = 'iid') %>% coef() %>% magrittr::extract(2,1:2)
summary(ols, vcov = 'iid')
summary(ols, vcov = 'iid') %>% coef()
ols <- felm(y ~ x, data = sample_df)
summary(ols) %>% coef()
summary(ols, vcov = 'iid') %>% coef() %>% magrittr::extract(2,1:2)
?Ecdat::Caschool
Ecdat::Caschool %>% head
test_df
410/3
test_df = arrange(test_df, income0)
test_df = arrange(test_df, income)
test_df = arrange(test_df, income)
test_df
test_df %>% head(158)
test_df %>% tail(158)
test_df %>% tail(1)
test_df %>% head(1)
xaringan::inf_mr('05-heteroskedasticity.Rmd')
b0
b1
s3
s
s2
i = 10, size = n
i = 10; size = n
sample_df <- tibble(
x = runif(size, 0.5, 1.5),
y = b0 + b1 * x + rnorm(size, 0, sd = s2 * x^2)
)
ols <- feols(y ~ x, data = sample_df)
ols
wls_t <- lm(y ~ x, data = sample_df, weights = 1/x^2)
wls_f <- lm(y ~ x, data = sample_df, weights = 1/x)
summary(ols, vcov = 'iid')
summary(ols, vcov = 'iid')
summary(ols, vcov = 'iid') %>% coef
summary(wls_t) %>% coef() %>% magrittr::extract(2,1:2)
summary(wls_f) %>% coef() %>% magrittr::extract(2,1:2)
summary(ols, vcov = 'hetero') %>% coef()
summary(ols, vcov = 'hetero') %>% coeftable()
summary(ols, vcov = 'hetero') %>% coeftable() %>% magrittr::extract(2, 1:2)
iter_df <- rbind(
summary(ols, vcov = 'iid') %>% coeftable() %>% magrittr::extract(2, 1:2),
summary(ols, vcov = 'hetero') %>% coeftable() %>% magrittr::extract(2, 1:2),
summary(wls_t) %>% coef() %>% magrittr::extract(2,1:2),
summary(wls_f) %>% coef() %>% magrittr::extract(2,1:2)
) %>%
as_tibble() %>%
mutate(
model = c("OLS Hom.", "OLS Het.", "WLS T", "WLS F"),
iter = i
)
iter_df
test_df
rep(test_df, 2)
test_df
dup_df = lapply(X = 1:10, FUN = function(x) mutate(test_df, dup = x)
dup_df = lapply(X = 1:10, FUN = function(x) mutate(test_df, dup = x)) %>% bind_rows()
dup_df
test_df
dup_df = lapply(X = 1:20, FUN = function(x) mutate(test_df, dup = x)) %>% bind_rows()
dup_est = lapply(
X = 1:20,
FUN = function(x) feols(test_score ~ ratio + income, data = dup_df %>% filter(dup <= x))
)
dup_est
dup_est[[1]]
dup_est[[20]]
est_df
test_df
test_df
test_df %<>% mutate(id = 1:nrow(test_df))
dup_df = lapply(X = 1:20, FUN = function(x) mutate(test_df, dup = x)) %>% bind_rows()
dup_est = lapply(
X = 1:20,
FUN = function(x) feols(test_score ~ ratio + income, data = dup_df %>% filter(dup <= x))
)
dup_est[[1]]
dup_est[[1]] %>% coeftable
dup_est[[1]] %>% summary(vcov = 'iid')
dup_est[[1]] %>% summary(vcov = 'iid') %>% coeftable()
dup_est[[1]] %>% summary(vcov = 'iid') %>% coeftable() %>% magrittr:extract(2,2)
dup_est[[1]] %>% summary(vcov = 'iid') %>% coeftable() %>% magrittr::extract(2,2)
dup_est[[1]] %>% summary(cluster = 'id') %>% coeftable() %>% magrittr:extract(2,2)
dup_est[[1]] %>% summary(cluster = 'id') %>% coeftable() %>% magrittr::extract(2,2)
data.frame(
dups = x - 1,
se_iid = dup_est[[1]] %>% summary(vcov = 'iid') %>% coeftable() %>% magrittr::extract(2,2),
se_iid = dup_est[[1]] %>% summary(cluster = 'id') %>% coeftable() %>% magrittr::extract(2,2)
)
dup_se = lapply(
X = seq_along(dup_est),
FUN = function(x) {
data.frame(
dups = x - 1,
se_iid = dup_est[[1]] %>% summary(vcov = 'iid') %>% coeftable() %>% magrittr::extract(2,2),
se_iid = dup_est[[1]] %>% summary(cluster = 'id') %>% coeftable() %>% magrittr::extract(2,2)
)
}
)
dup_se
dup_se
dup_se
dup_est
?feols
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
test_reg
test_reg
test_het_out[10:13] %>% paste0("\n") %>% cat()
test_regtest_het_out
summary(test_reg, vcov = 'hetero')
test_het_out
test_het_out
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
xaringan::inf_mr('05-heteroskedasticity.Rmd')
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
wait = 4,
timeout = 60
)
